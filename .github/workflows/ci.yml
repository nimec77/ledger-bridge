name: CI

on:
  push:
    branches: [ main ]
    paths: [ '**.rs', '**/Cargo.toml', '**/Cargo.lock' ]
  pull_request:
    branches: [ main ]
    paths: [ '**.rs', '**/Cargo.toml', '**/Cargo.lock' ]
  # Allow manual runs from the Actions tab
  workflow_dispatch:
    inputs:
      rust_toolchain:
        description: "Rust toolchain version (stable, beta, nightly, or specific)"
        required: false
        default: "stable"
      run_tests:
        description: "Run test suite? (true/false)"
        required: false
        default: "true"
      run_lint:
        description: "Run formatting and clippy checks? (true/false)"
        required: false
        default: "true"

# Cancel previous runs of same branch
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup:
    name: Setup Rust ${{ github.event.inputs.rust_toolchain || 'stable' }}
    runs-on: ubuntu-latest
    outputs:
      toolchain: ${{ steps.set_toolchain.outputs.toolchain }}
    steps:
      - name: Set Rust toolchain
        id: set_toolchain
        run: |
          TOOLCHAIN=${{ github.event.inputs.rust_toolchain }}
          if [ -z "$TOOLCHAIN" ]; then TOOLCHAIN=stable; fi
          echo "toolchain=$TOOLCHAIN" >> $GITHUB_OUTPUT
      - name: Display selected toolchain
        run: |
          echo "Using Rust toolchain: ${{ steps.set_toolchain.outputs.toolchain }}"

  # ---- AUTO on PR/commit, and also available in manual runs ----
  lint:
    name: Lint (fmt + clippy) [Linux]
    needs: setup
    if: ${{ github.event.inputs.run_lint != 'false' || github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ needs.setup.outputs.toolchain }}
          components: rustfmt, clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: rustfmt check
        run: cargo fmt --all -- --check

      - name: clippy (deny warnings)
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Build docs
        run: cargo doc --no-deps

  test_linux:
    name: Tests [Linux]
    needs: setup
    if: ${{ github.event.inputs.run_tests != 'false' || github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ needs.setup.outputs.toolchain }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Run tests
        run: cargo test --workspace --all-features -- --nocapture

  # ---- MANUAL-ONLY: extra OSes (won't run on PR/commit) ----
  test_extra_os:
    name: Tests [${{ matrix.os }}] (manual only)
    needs: setup
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests != 'false' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ needs.setup.outputs.toolchain }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Run tests
        run: cargo test --workspace --all-features -- --nocapture
